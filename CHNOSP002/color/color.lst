     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_vsprintf
     7 00000000                                 	EXTERN	_api_putstr0
     8 00000000                                 	EXTERN	_api_initmalloc
     9 00000000                                 	EXTERN	_api_malloc
    10 00000000                                 	EXTERN	_api_openwin
    11 00000000                                 	EXTERN	_api_refreshwin
    12 00000000                                 	EXTERN	_api_getkey
    13 00000000                                 	EXTERN	_api_end
    14 00000000                                 [FILE "color.ca"]
    15                                          [SECTION .text]
    16 00000000                                 	GLOBAL	_printf
    17 00000000                                 _printf:
    18 00000000 55                              	PUSH	EBP
    19 00000001 89 E5                           	MOV	EBP,ESP
    20 00000003 56                              	PUSH	ESI
    21 00000004 53                              	PUSH	EBX
    22 00000005 81 EC 000003F0                  	SUB	ESP,1008
    23 0000000B 8D 45 0C                        	LEA	EAX,DWORD [12+EBP]
    24 0000000E 8D 9D FFFFFC08                  	LEA	EBX,DWORD [-1016+EBP]
    25 00000014 50                              	PUSH	EAX
    26 00000015 FF 75 08                        	PUSH	DWORD [8+EBP]
    27 00000018 53                              	PUSH	EBX
    28 00000019 E8 [00000000]                   	CALL	_vsprintf
    29 0000001E 53                              	PUSH	EBX
    30 0000001F 89 C6                           	MOV	ESI,EAX
    31 00000021 E8 [00000000]                   	CALL	_api_putstr0
    32 00000026 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    33 00000029 89 F0                           	MOV	EAX,ESI
    34 0000002B 5B                              	POP	EBX
    35 0000002C 5E                              	POP	ESI
    36 0000002D 5D                              	POP	EBP
    37 0000002E C3                              	RET
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 B6 D7 B0 CA DF C0 B0 DD 00      	DB	0xB6,0xD7,0xB0,0xCA,0xDF,0xC0,0xB0,0xDD,0x00
    41                                          [SECTION .text]
    42 0000002F                                 	GLOBAL	_CHNMain
    43 0000002F                                 _CHNMain:
    44 0000002F 55                              	PUSH	EBP
    45 00000030 89 E5                           	MOV	EBP,ESP
    46 00000032 57                              	PUSH	EDI
    47 00000033 56                              	PUSH	ESI
    48 00000034 31 FF                           	XOR	EDI,EDI
    49 00000036 53                              	PUSH	EBX
    50 00000037 83 EC 20                        	SUB	ESP,32
    51 0000003A E8 [00000000]                   	CALL	_api_initmalloc
    52 0000003F 68 00005C40                     	PUSH	23616
    53 00000044 E8 [00000000]                   	CALL	_api_malloc
    54 00000049 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
    55 0000004C 68 [00000000]                   	PUSH	LC0
    56 00000051 6A FF                           	PUSH	-1
    57 00000053 68 000000A4                     	PUSH	164
    58 00000058 68 00000090                     	PUSH	144
    59 0000005D 50                              	PUSH	EAX
    60 0000005E E8 [00000000]                   	CALL	_api_openwin
    61 00000063 83 C4 18                        	ADD	ESP,24
    62 00000066 C7 45 DC 00000000               	MOV	DWORD [-36+EBP],0
    63 0000006D 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
    64 00000070                                 L12:
    65 00000070 8B 45 DC                        	MOV	EAX,DWORD [-36+EBP]
    66 00000073 8B 55 F0                        	MOV	EDX,DWORD [-16+EBP]
    67 00000076 31 F6                           	XOR	ESI,ESI
    68 00000078 8D 84 02 00000FC8               	LEA	EAX,DWORD [4040+EDX+EAX*1]
    69 0000007F 89 45 D4                        	MOV	DWORD [-44+EBP],EAX
    70 00000082                                 L11:
    71 00000082 8D 14 36                        	LEA	EDX,DWORD [ESI+ESI*1]
    72 00000085 BB 0000002B                     	MOV	EBX,43
    73 0000008A 89 D0                           	MOV	EAX,EDX
    74 0000008C 89 55 E8                        	MOV	DWORD [-24+EBP],EDX
    75 0000008F 99                              	CDQ
    76 00000090 F7 FB                           	IDIV	EBX
    77 00000092 8D 0C 3F                        	LEA	ECX,DWORD [EDI+EDI*1]
    78 00000095 89 45 E4                        	MOV	DWORD [-28+EBP],EAX
    79 00000098 89 C8                           	MOV	EAX,ECX
    80 0000009A 46                              	INC	ESI
    81 0000009B 99                              	CDQ
    82 0000009C F7 FB                           	IDIV	EBX
    83 0000009E 6B C0 06                        	IMUL	EAX,EAX,6
    84 000000A1 03 45 E4                        	ADD	EAX,DWORD [-28+EBP]
    85 000000A4 8B 5D D4                        	MOV	EBX,DWORD [-44+EBP]
    86 000000A7 83 C0 10                        	ADD	EAX,16
    87 000000AA 88 03                           	MOV	BYTE [EBX],AL
    88 000000AC 43                              	INC	EBX
    89 000000AD 89 5D D4                        	MOV	DWORD [-44+EBP],EBX
    90 000000B0 83 FE 7F                        	CMP	ESI,127
    91 000000B3 7E CD                           	JLE	L11
    92 000000B5 47                              	INC	EDI
    93 000000B6 81 45 DC 00000090               	ADD	DWORD [-36+EBP],144
    94 000000BD 83 FF 7F                        	CMP	EDI,127
    95 000000C0 7E AE                           	JLE	L12
    96 000000C2 68 0000009C                     	PUSH	156
    97 000000C7 68 00000088                     	PUSH	136
    98 000000CC 6A 1C                           	PUSH	28
    99 000000CE 6A 08                           	PUSH	8
   100 000000D0 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   101 000000D3 E8 [00000000]                   	CALL	_api_refreshwin
   102 000000D8 6A 01                           	PUSH	1
   103 000000DA E8 [00000000]                   	CALL	_api_getkey
   104 000000DF 83 C4 18                        	ADD	ESP,24
   105 000000E2 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   106 000000E5 5B                              	POP	EBX
   107 000000E6 5E                              	POP	ESI
   108 000000E7 5F                              	POP	EDI
   109 000000E8 5D                              	POP	EBP
   110 000000E9 E9 [00000000]                   	JMP	_api_end
