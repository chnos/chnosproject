     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_vsprintf
     7 00000000                                 	EXTERN	_api_putstr0
     8 00000000                                 	EXTERN	__alloca
     9 00000000                                 	EXTERN	_api_end
    10 00000000                                 	EXTERN	_sprintf
    11 00000000                                 [FILE "sosu2.ca"]
    12                                          [SECTION .text]
    13 00000000                                 	GLOBAL	_printf
    14 00000000                                 _printf:
    15 00000000 55                              	PUSH	EBP
    16 00000001 89 E5                           	MOV	EBP,ESP
    17 00000003 56                              	PUSH	ESI
    18 00000004 53                              	PUSH	EBX
    19 00000005 81 EC 000003F0                  	SUB	ESP,1008
    20 0000000B 8D 45 0C                        	LEA	EAX,DWORD [12+EBP]
    21 0000000E 8D 9D FFFFFC08                  	LEA	EBX,DWORD [-1016+EBP]
    22 00000014 50                              	PUSH	EAX
    23 00000015 FF 75 08                        	PUSH	DWORD [8+EBP]
    24 00000018 53                              	PUSH	EBX
    25 00000019 E8 [00000000]                   	CALL	_vsprintf
    26 0000001E 53                              	PUSH	EBX
    27 0000001F 89 C6                           	MOV	ESI,EAX
    28 00000021 E8 [00000000]                   	CALL	_api_putstr0
    29 00000026 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    30 00000029 89 F0                           	MOV	EAX,ESI
    31 0000002B 5B                              	POP	EBX
    32 0000002C 5E                              	POP	ESI
    33 0000002D 5D                              	POP	EBP
    34 0000002E C3                              	RET
    35                                          [SECTION .data]
    36 00000000                                 LC0:
    37 00000000 25 64 20 00                     	DB	"%d ",0x00
    38                                          [SECTION .text]
    39 0000002F                                 	GLOBAL	_CHNMain
    40 0000002F                                 _CHNMain:
    41 0000002F 55                              	PUSH	EBP
    42 00000030 B8 00002718                     	MOV	EAX,10008
    43 00000035 89 E5                           	MOV	EBP,ESP
    44 00000037 56                              	PUSH	ESI
    45 00000038 53                              	PUSH	EBX
    46 00000039 31 F6                           	XOR	ESI,ESI
    47 0000003B E8 [00000000]                   	CALL	__alloca
    48 00000040                                 L7:
    49 00000040 C6 84 35 FFFFD8E8 00            	MOV	BYTE [-10008+EBP+ESI*1],0
    50 00000048 46                              	INC	ESI
    51 00000049 81 FE 0000270F                  	CMP	ESI,9999
    52 0000004F 7E EF                           	JLE	L7
    53 00000051 BE 00000002                     	MOV	ESI,2
    54 00000056                                 L18:
    55 00000056 80 BC 35 FFFFD8E8 00            	CMP	BYTE [-10008+EBP+ESI*1],0
    56 0000005E 74 15                           	JE	L24
    57 00000060                                 L10:
    58 00000060 46                              	INC	ESI
    59 00000061 81 FE 0000270F                  	CMP	ESI,9999
    60 00000067 7E ED                           	JLE	L18
    61 00000069 E8 [00000000]                   	CALL	_api_end
    62 0000006E 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
    63 00000071 5B                              	POP	EBX
    64 00000072 5E                              	POP	ESI
    65 00000073 5D                              	POP	EBP
    66 00000074 C3                              	RET
    67 00000075                                 L24:
    68 00000075 56                              	PUSH	ESI
    69 00000076 8D 9D FFFFD8E0                  	LEA	EBX,DWORD [-10016+EBP]
    70 0000007C 68 [00000000]                   	PUSH	LC0
    71 00000081 53                              	PUSH	EBX
    72 00000082 E8 [00000000]                   	CALL	_sprintf
    73 00000087 53                              	PUSH	EBX
    74 00000088 E8 [00000000]                   	CALL	_api_putstr0
    75 0000008D 83 C4 10                        	ADD	ESP,16
    76 00000090 8D 04 36                        	LEA	EAX,DWORD [ESI+ESI*1]
    77 00000093 3D 0000270F                     	CMP	EAX,9999
    78 00000098 7F C6                           	JG	L10
    79 0000009A                                 L17:
    80 0000009A C6 84 05 FFFFD8E8 01            	MOV	BYTE [-10008+EBP+EAX*1],1
    81 000000A2 01 F0                           	ADD	EAX,ESI
    82 000000A4 3D 0000270F                     	CMP	EAX,9999
    83 000000A9 7E EF                           	JLE	L17
    84 000000AB EB B3                           	JMP	L10
